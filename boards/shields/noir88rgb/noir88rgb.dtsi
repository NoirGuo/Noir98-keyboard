/*
 * Copyright (c) 2020 Noir Guo
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix-transform = &default_transform;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <20>;
        rows = <5>;
// ------------------------------------------------------------------------------------------------------------
// |SW1    |SW2    |SW3    |SW4    |SW5    |SW6    |SW7    |SW8    |SW9   |SW10   |                  |SW55   |SW54    |SW53    |SW52   |SW51    |SW50     |SW49    |SW48    |SW47   |SW46   |
// |SW11   |SW12   |SW13   |SW14   |SW15   |SW16   |SW17   |SW18   |SW19  |SW20   |                  |SW65   |SW64    |SW63    |SW62   |SW61    |SW60     |SW59    |SW58    |SW57   |SW56   |
// |SW21   |SW22   |SW23   |SW24   |SW25   |SW26   |SW27   |SW28   |SW29  |SW30   |                  |SW75   |SW74    |SW73    |SW72   |SW71    |SW70     |SW69    |SW68    |SW67   |SW66   |
// |SW31   |SW32   |SW33   |SW34   |SW35   |SW36   |SW37   |SW38   |SW39  |SW40   |U1    | |U2       |SW85   |SW84    |SW83    |SW82   |SW81    |SW80     |SW79    |SW78    |SW77   |SW76   |
//                                                 |SW41   |SW42   |SW43  |SW44   |                  |SW89   |SW88    |SW87    |SW86   |

        map = <
   RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)                  RC(0,10) RC(0,11) RC(0,12) RC(0,13) RC(0,14) RC(0,15) RC(0,16) RC(0,17) RC(0,18) RC(0,19)
   RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)                  RC(1,10) RC(1,11) RC(1,12) RC(1,13) RC(1,14) RC(1,15) RC(1,16) RC(1,17) RC(1,18) RC(1,19)
   RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9)                  RC(2,10) RC(2,11) RC(2,12) RC(2,13) RC(2,14) RC(2,15) RC(2,16) RC(2,17) RC(2,18) RC(2,19)
   RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(4,9) RC(4,10) RC(3,10) RC(3,11) RC(3,12) RC(3,13) RC(3,14) RC(3,15) RC(3,16) RC(3,17) RC(3,18) RC(3,19)
                                                   RC(4,5) RC(4,6) RC(4,7) RC(4,8)                  RC(4,11) RC(4,12) RC(4,13) RC(4,14) 

        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
        wakeup-source;

        row-gpios
            = <&gpio0 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 17 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 22 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 24 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
        ;


    };

    left_encoder: encoder_left {
        compatible = "alps,ec11";
        a-gpios = <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
    };

    right_encoder: encoder_right {
        compatible = "alps,ec11";
        a-gpios = <&gpio0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
    };

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
        triggers-per-rotation = <20>;
    };

};

